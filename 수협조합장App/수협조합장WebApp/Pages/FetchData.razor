@page "/fetchdata"
@inject HttpClient Http
@inject NavigationManager NavigationManager
<CascadingAuthenticationState>
    <AuthorizeView Policy="수협Policy">
        <Authorized>
            <h3>어드민 페이지</h3>
        </Authorized>
        <NotAuthorized>
            <p>해당 역할에 대한 권한이 없습니다.</p>
            <p>로그인 페이지로 이동 중...</p>
    
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

<PageTitle>Weather forecast</PageTitle>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;


    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
